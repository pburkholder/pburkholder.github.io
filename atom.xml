<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[A Blog]]></title>
  <link href="http://pburkholder.github.io/atom.xml" rel="self"/>
  <link href="http://pburkholder.github.io/"/>
  <updated>2015-06-18T13:10:44-04:00</updated>
  <id>http://pburkholder.github.io/</id>
  <author>
    <name><![CDATA[Peter Burkholder]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RFC Report 2015 Jun 18]]></title>
    <link href="http://pburkholder.github.io/blog/2015/06/18/rfc-report-2015-jun-18/"/>
    <updated>2015-06-18T12:41:05-04:00</updated>
    <id>http://pburkholder.github.io/blog/2015/06/18/rfc-report-2015-jun-18</id>
    <content type="html"><![CDATA[<h2>Community updates:</h2>

<p>Chef Community Summit - <a href="http://summit.chef.io">http://summit.chef.io</a> Oct 14-15 in Seattle.
London will be November 3 &amp; 4. Registration for that should open by end of
next week or so. Mark your calendars</p>

<p>ChefConf 2016 will be moved as May conflicted with partner conferences. New
dates to be announced soon.</p>

<p>Mailing list migration to Google Groups not happening for technical reasons.
May move to Discourse; discussions underway. Other stuff:</p>

<p>Product Feedback - <a href="http://feedback.chef.io">http://feedback.chef.io</a> - read, contribute, comment, and
vote on things that fall outside of support requests, this RFC process, etc.
and <a href="http://www.meetup.com/Chef-Office-Hours/">http://www.meetup.com/Chef-Office-Hours/</a> where we&rsquo;ve been announcing
regular Chef Office Hours</p>

<p>Also, <a href="https://github.com/chef/chef-rfc/blob/master/rfc029-governance-policy.md">https://github.com/chef/chef-rfc/blob/master/rfc029-governance-policy.md</a>
CBGB members need to be selected.</p>

<h2>Product updates</h2>

<p>Chef server 12.1, Ent Server 11.3.2 are in progress, patching Redis is a big
push here.  Manage and Supermarked updates coming soon too.</p>

<h2>RFCs</h2>

<p><a href="https://github.com/chef/chef-rfc/pull/118">https://github.com/chef/chef-rfc/pull/118</a> garnered the most discussion.
Consensus is that having Ohai behave on the CLI like it does during a Chef run
is a nice win, but there are some details still being ironed out.  Also,
moving the hints systems into a central config will probably help our users.</p>

<blockquote><p> The core desire is to have a way to configure ohai so that things like knife bootstrap can leave the system set up so that ohai run directly and ohai run from Chef will behave the same way.
[the] most illustrative use cases so far:
 -  I want to disable an ohai plugin,
 - I want to set the ohai plugin path.
 - I want to change the source of data for the hostname plugin.
 - I want to retrieve EC2 metadata in the ec2 plugin.</p></blockquote>

<p>RFCs to move OpenBSD to tier 2 approved and changing <code>resource attributes</code> to
<code>resource properties</code> also approved
(<a href="https://github.com/chef/chef-rfc/pull/128">https://github.com/chef/chef-rfc/pull/128</a>) &ndash; This is a pretty interesting
change.  Ubuntu 10.04 is on track to be yanked.</p>

<h2>Next time</h2>

<p><a href="https://github.com/chef/chef-rfc/pull/135">https://github.com/chef/chef-rfc/pull/135</a> - some proposals to change resource property default behaviors. Mostly I&rsquo;m opposed to adding more API keywords as they only have utility in some edge cases, and make the finding the useful API methods harder to find and use.
<a href="https://github.com/chef/chef-rfc/pull/136">https://github.com/chef/chef-rfc/pull/136</a> - clarify some Chef resoure naming precedence</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[That Thing to Add Packaged Gems Into Your GEMÂ PATH]]></title>
    <link href="http://pburkholder.github.io/blog/2015/05/04/that-thing-add-packaged-gems-into-your-gem-path/"/>
    <updated>2015-05-04T09:28:51-04:00</updated>
    <id>http://pburkholder.github.io/blog/2015/05/04/that-thing-add-packaged-gems-into-your-gem-path</id>
    <content type="html"><![CDATA[<p>It&rsquo;s <code>Gem::Specification.reset</code>  For example, in a Chef cookbook I&rsquo;m installing the <code>conjur</code> package from
<a href="https://conjur.net">Conjur</a>, and need those Gems available to me during
Chef&rsquo;s compilation. So:</p>

<pre><code># Install from a downloaded .deb (or .rpm)
dpkg_package "conjur" do
  source target_path
end.run_action(:install)

# Append those embedded gems in my path:
Gem.path &lt;&lt; "/opt/conjur/embedded/lib/ruby/gems/2.1.0"

# And reload the Gem specifications that are in your .path
Gem::Specification.reset()
</code></pre>

<p>It also be sufficient to do <code>Gem.clear_paths</code>, but that also sets your
Gem.paths to <code>nil</code> so that doesn&rsquo;t seem right. Haven&rsquo;t tested.</p>

<p>Maybe I should make a PR to alias that to <code>Gem.reload_paths</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emulating Cookbook Semver Build Numbers With Chef Policyfiles]]></title>
    <link href="http://pburkholder.github.io/blog/2015/04/23/emulating-cookbook-semver-build-numbers-with-chef-policyfiles/"/>
    <updated>2015-04-23T18:10:22-04:00</updated>
    <id>http://pburkholder.github.io/blog/2015/04/23/emulating-cookbook-semver-build-numbers-with-chef-policyfiles</id>
    <content type="html"><![CDATA[<p>This is a posting of [<a href="https://github.com/pburkholder/buildnumber/blob/master/README.md">https://github.com/pburkholder/buildnumber/blob/master/README.md</a>]</p>

<h1>policyfiles and builds</h1>

<p>Demonstrate use of policyfiles to emulate build number increments.</p>

<h2>Scenario</h2>

<p>We assume some build process that bundles a Chef cookbook as the generated artifact, and then includes that cookbook in the run_list of nodes in the same env:</p>

<pre><code>run_list: 'recipe[base@0.1.0], recipe[myapp@0.1.0]'
</code></pre>

<p>However, the myapp recipe configure index.html via a template to render the build number as well:</p>

<pre><code>&lt;h1&gt;Welcome to myapp&lt;/h1&gt;
&lt;ul&gt;
 &lt;li&gt;Version: 0.1.0&lt;/li&gt;
 &lt;li&gt;Build: 1001&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>The &lsquo;base&rsquo; recipe is unchanged in each build, but the &lsquo;myapp&rsquo; recipe has an data_file that is incremented with each build.</p>

<p>Builds are generated and tested on ephemeral nodes. The build are pushed as the policy for the role &lsquo;myapp&rsquo;, and are labelled with policy_groups that correspond to each build, e.g.:</p>

<ul>
<li>myapp-0.1.0-0</li>
<li>myapp-0.1.0-1</li>
</ul>


<p>When build myapp-0.1.0-1 passes, then it&rsquo;s promoted to the &lsquo;prod&rsquo; policy_group and then the &lsquo;prod&rsquo; node converges with that new policy based on the bundled cookbooks.</p>

<h2>Chef Server setup</h2>

<p>No recipe for this yet. DNS is chefserver.cheffian.com. To do:</p>

<ul>
<li>install chef-server 12.0.7 per <a href="https://www.chef.io/blog/2015/03/27/chef-server-12-0-7-released/">https://www.chef.io/blog/2015/03/27/chef-server-12-0-7-released/</a></li>
<li><p><code>/etc/opscode/chef-server.rb</code> (you need to run chef-server-ctl reconfigure to make it take effect):</p>

<pre><code>lb["xdl_defaults"]["policies"] = true
api_fqdn 'chefserver.cheffian.com'
# NOT SURE IF NEEDED:
</code></pre></li>
<li><p>create a user and an organization with that user associated (<code>-a</code>):
    sudo chef-server-ctl user-create pdb Peter Burkholder <a href="&#x6d;&#97;&#105;&#108;&#x74;&#111;&#x3a;&#x70;&#98;&#117;&#114;&#107;&#104;&#x6f;&#108;&#100;&#101;&#x72;&#x40;&#x63;&#104;&#x65;&#x66;&#x2e;&#105;&#x6f;">&#x70;&#98;&#x75;&#x72;&#107;&#x68;&#x6f;&#x6c;&#x64;&#101;&#x72;&#x40;&#x63;&#x68;&#x65;&#102;&#x2e;&#x69;&#x6f;</a> TestPassword -f pdb.pem
    sudo chef-server-ctl org-create pdb_org pdb_org -f pdb_org.pem -a pdb</p></li>
<li>make <code>current_dir/.chef/knife.rb</code> and copy the above .pem file into the <code>.chef</code> directory:
    cd .chef
    scp ubuntu@chefserver.cheffian.com:pdb.pem .
    scp ubuntu@chefserver.cheffian.com:pdb_org.pem .</li>
<li>fetch the ssl cert:
    knife ssl fetch <a href="https://chefserver.cheffian.com">https://chefserver.cheffian.com</a></li>
<li>test with <code>knife user list</code>:</li>
</ul>


<h2>Cookbooks and Clients:</h2>

<h3>First lets get the simplest case down</h3>

<p>Commit <code>pdb/policyfile 0211fbb</code>is where I have base cookbook installing httpd, and the myapp cookbook installing the index.html with build number from <code>libraries/build.json</code>. The <code>kitchen verify</code> should pass.</p>

<h3>Onwards and local setup</h3>

<p>Install 0.5.0 of ChefDK:</p>

<pre><code>curl "http://www.chef.io/chef/metadata-chefdk?p=mac_os_x&amp;pv=10.10&amp;m=x86_64&amp;prerelease=true"
</code></pre>

<p>Update knife.rb with add&#8217;l configuration parameters:</p>

<pre><code>use_policyfile true
policy_document_native_api true

#policy_name 'jenkins'
#policy_group 'dev'
</code></pre>

<p>Now I create <code>cookbooks/myapp/Policyfile.rb</code> and run <code>chef install -D</code>:</p>

<pre><code>chef install -D
Building policy myapp
Expanded run list: recipe[base], recipe[myapp]
Caching Cookbooks...
Installing base  &gt;= 0.0.0 from path
Installing myapp &gt;= 0.0.0 from path
Installing apt   2.7.0
Installing httpd 0.2.11
</code></pre>

<p>and push that as &lsquo;myapp-0.1.0-0&rsquo; using the &lsquo;policygroup&rsquo; feature</p>

<pre><code>chef push myapp-0.1.0-0
Uploading policy to policy group myapp-0.1.0-0
WARN: Using native policy API preview mode. You may be required to delete and
re-upload this data when upgrading to the final release version of the feature.
Uploaded base  0.1.0  (f5cdaad1)
Uploaded myapp 0.1.0  (81a87a95)
Uploaded apt   2.7.0  (16c57abb)
Uploaded httpd 0.2.11 (3c562c6a)
</code></pre>

<h2>Try it on a node</h2>

<p>I have set up in aws the nodes &lsquo;p0.cheffian.com&rsquo;, &lsquo;p1&hellip;.&rsquo;, and &lsquo;p2&hellip;.&rsquo;</p>

<p>Not setting any runlist the first time, then going back and editing client.rb to use the Policyfile endpoints and features.</p>

<pre><code>knife bootstrap p0.cheffian.com -x ubuntu -r '' -N p0 --sudo

# Note that my pdb_org.pem didn't work so I rm the validation lines
# from knife.rb to use my personal creds
</code></pre>

<p>then on <code>p0.cheffian.com</code> set policy_name and policy_group:</p>

<pre><code>log_location     STDOUT
chef_server_url  "https://chefserver.cheffian.com/organizations/pdb_org"
validation_client_name "chef-validator"
node_name "p0"
trusted_certs_dir "/etc/chef/trusted_certs"

use_policyfile true
policy_document_native_api true
policy_name  'myapp'
policy_group 'myapp-0.1.0-0'
</code></pre>

<p>and that works.</p>

<p>Now I tag build 0.1.0-0 and push that to our origin git repo.</p>

<h2>Now build 1</h2>

<h3>on the workstation:</h3>

<p>We change <code>myapp/files/default/build.json</code> to build 1, and:</p>

<pre><code>rm Policyfile.lock.json
</code></pre>

<p>and re-run:</p>

<pre><code>chef install -D
</code></pre>

<p>to update the Policyfile.lock.json. Then:</p>

<pre><code>chef push myapp-0.1.0-1

git commit -am "0.1.0-1"
git tag -m 0.1.0-1 0.1.0-1
git push origin master
git push origin 0.1.0-1
</code></pre>

<p>OR: just run <code>rake bump build tag</code></p>

<h3>Now lets set up the target node:</h3>

<p>bootstrap the node:</p>

<pre><code>knife bootstrap p1.cheffian.com -x ubuntu -r '' -N p1 --sudo
</code></pre>

<p>Then:</p>

<pre><code>ssh p1.cheffian.com
sudo bash
cd /etc/chef

cat &gt;&gt; client.rb
use_policyfile true
policy_document_native_api true
policy_name  'myapp'
policy_group 'myapp-0.1.0-1'
 ^D
</code></pre>

<p>Lastly run the client and confirm</p>

<pre><code>sudo chef-client
curl localhost
</code></pre>

<h3>Lastly we promote this build of myapp to prod</h3>

<p>Here we go:</p>

<pre><code>git checkout 0.1.0-1
chef push prod
chef push prod
  Uploading policy to policy group prod
  WARN: Using native policy API preview mode. You may be required to delete and
  re-upload this data when upgrading to the final release version of the feature.
  Using    base  0.1.0  (fc79b25d)
  Using    apt   2.7.0  (16c57abb)
  Using    httpd 0.2.11 (3c562c6a)
  Uploaded myapp 0.1.0  (90a39ad0)
</code></pre>

<p>Check with <code>knife raw</code> the policy for &lsquo;myapp&rsquo; in the &lsquo;prod&rsquo; policy_group</p>

<pre><code>knife raw /policy_groups/prod/policies/myapp | egrep -B2 \"identifier
    "base": {
      "version": "0.1.0",
      "identifier": "fc79b25dc1ac842bdf342a65a2dda0d83d929c12",
--
    "myapp": {
      "version": "0.1.0",
      "identifier": "90a39ad0ad73ff3b245e1c5ede2a60a437349a73",
--
    "apt": {
      "version": "2.7.0",
      "identifier": "16c57abbd056543f7d5a15dabbb03261024a9c5e",
--
    "httpd": {
      "version": "0.2.11",
      "identifier": "3c562c6ac6ac554b4a11a0ad4c522fab246bf8b3",
</code></pre>

<p>The prod node always has the &lsquo;prod policy group&rsquo; as in the this &lsquo;/etc/chef/client.rb&rsquo;:</p>

<pre><code>log_location     STDOUT
chef_server_url  "https://chefserver.cheffian.com/organizations/pdb_org"
validation_client_name "chef-validator"
node_name "prod"
trusted_certs_dir "/etc/chef/trusted_certs"

use_policyfile true
policy_document_native_api true
policy_name  'myapp'
policy_group 'prod'
</code></pre>

<p>And now that we&rsquo;ve promoted to &lsquo;prod&rsquo; policygroup the chef-client run produces this html:</p>

<pre><code>&lt;h1&gt;Welcome to myapp&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;Version: 0.1.0&lt;/li&gt;
  &lt;li&gt;Build: 1 &lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>Fini.</p>
]]></content>
  </entry>
  
</feed>
